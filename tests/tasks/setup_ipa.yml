---
- name: Set __is_beaker_env
  set_fact:
    __is_beaker_env: "{{ lookup('env', 'BEAKERLIB') != '' }}"

- name: Install ansible-freeipa
  package:
    name: ansible-freeipa
  delegate_to: 127.0.0.1
  when: __is_beaker_env

- name: Clone ansible-freeipa repo
  git:
    repo: https://github.com/freeipa/ansible-freeipa
    version: v0.2.0
    dest: /tmp/freeipa-repo
  delegate_to: 127.0.0.1
  become: false
  when: not __is_beaker_env

- name: Set ipaserver rolename to name
  set_fact:
    certificate_ipaserver_rolename: ipaserver
  when: __is_beaker_env | bool

- name: Set ipaserver rolename to path
  set_fact:
    certificate_ipaserver_rolename: /tmp/freeipa-repo/roles/ipaserver
  when: not __is_beaker_env

- name: Set hostname
  hostname:
    name: ipaserver.test.local

- name: Ensure nss package is up-to-date
  package:
    name: nss
    state: latest
  when: ansible_facts.os_family == "RedHat"

- name: Run IPA server install
  block:
    - include_role:
        name: "{{ certificate_ipaserver_rolename }}"
  rescue:
    - name: FAILURE - check entropy
      command: cat /proc/sys/kernel/random/entropy_avail
    - name: FAILURE - get logs for debugging
      archive:
        dest: /tmp/ipalogs.tgz
        path:
          - /var/log/messages
          - /var/log/ipaserver-install.log
          - /var/log/ipaclient-install.log
          - /var/log/pki
    - name: FAILURE - grab archive
      fetch:
        src: /tmp/ipalogs.tgz
        dest: "{{ local_log_dir }}/ipalogs.tgz"
        flat: true
    - name: FAILURE - unpack archive
      unarchive:
        src: "{{ local_log_dir }}/ipalogs.tgz"
        dest: "{{ local_log_dir }}"
        mode: 0644
        list_files: true
        remote_src: true
      delegate_to: 127.0.0.1
    - fail:
        msg: failed

  vars:
    ipaserver_setup_dns: yes
    ipaserver_auto_forwarders: yes
    ipaadmin_password: SomeADMINpassword
    ipadm_password: SomeDMpassword
    ipaserver_domain: test.local
    ipaserver_realm: TEST.LOCAL
    ipaserver_no_dnssec_validation: yes
    local_log_dir: "{{ lookup('env', 'TEST_ARTIFACTS') | d('/tmp', true) }}"
