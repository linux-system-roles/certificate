---
- name: Retrieve certificate file stats
  stat:
    path: "{{ cert['path'] }}"
  register: result

- name: Verify if certificate file exists
  assert:
    that:
      - result.stat.exists
    fail_msg: "Certificate file '{{ cert['path'] }}' does not exist."

- name: Verify certificate file owner and group
  assert:
    that:
      - (cert['owner'] | default('root')) in
        [result.stat.pw_name, result.stat.uid]
      - (cert['group'] | default('root')) in
        [result.stat.gr_name, result.stat.gid]
    fail_msg: >-
      {{ result.stat.pw_name }}:{{ result.stat.gr_name }} !=
      {{ cert['owner'] | default('root') }}:
      {{ cert['group'] | default('root') }}

- name: Retrieve key file stats
  stat:
    path: "{{ cert['key_path'] }}"
  register: result

- name: Verify if key file exists
  assert:
    that:
      - result.stat.exists
    fail_msg: "Key file '{{ cert['key_path'] }}' does not exist."

- name: Verify key file owner and group
  assert:
    that:
      - (cert['owner'] | default('root')) in
        [result.stat.pw_name, result.stat.uid]
      - (cert['group'] | default('root')) in
        [result.stat.gr_name, result.stat.gid]
    fail_msg: >-
      {{ result.stat.pw_name }}:{{ result.stat.gr_name }} !=
      {{ cert['owner'] | default('root') }}:
      {{ cert['group'] | default('root') }}

- name: Retrieve certificate subject
  shell: >-
    openssl x509 -in {{ cert['path'] }} -noout -subject |
    sed 's/ = /=/g' |
    sed 's/^subject=\(.*\)$/\1/'
  register: result
  changed_when: false

- name: Verify certificate subject
  assert:
    that:
      - cert['subject'] == result.stdout
    fail_msg: "{{ cert['subject'] }} != {{ result.stdout }}"

- name: Retrieve certificate Subject Alternative Name (SAN)
  shell: >-
    openssl x509 -in {{ cert['path'] }} -noout -text |
    grep 'Subject Alternative Name' -A1 |
    tail -1 |
    tr , '\n' |
    sed 's/^\s\+//g'
  register: result
  changed_when: false

- name: Verify certificate SAN
  assert:
    that:
      - (cert['subject_alt_name'] | sort) == (result.stdout_lines | sort)
    fail_msg: >-
      {{ cert['subject_alt_name'] | sort }} != {{ result.stdout_lines | sort }}

- name: Retrieve key size
  shell: >-
    openssl rsa -in {{ cert['key_path'] }} -text -noout |
    grep -i "private-key" |
    sed 's/^[^0-9]\+\([0-9]\+\).\+$/\1/'
  register: result
  changed_when: false

- name: Verify key file attributes
  assert:
    that:
      - (result.stdout | int) == (cert["key_size"] | default(2048) | int)
    fail_msg: |
      key_size {{ result.stdout }} != {{ cert['key_size'] | default(2048) }}
